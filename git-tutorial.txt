set up
$ git config --global user.name "Mariano Luiz King"
$ git config --global user.email kmarianu@gmail.com
$ git config --global init.default branch main


help
$ git config-h  or git help config

clear
$ clear
$ pwd
$ ls

init
$ git init

status
$ git status
-see where branch u are.
-see untracked files.

to track file

$ git add <file>
$ git add .

untrack file
$ git rm --cached <file?

make git ignore
- make a .gitignore which is a file
- drag the .gitignore into a notepad and inputfiles u want to ignore 
        - ignore all .txt files
        - many ways to ignore files, search it.


**once git added, there are in environment called staging
**it's now time to commit (taking a snapshot of ur files)

commit
$ git commit -m "first commit"

**to see changes after committing do this:
$ git diff 

3 stages:  working files, staging, commit

remove a file from staging
$ git restore --staged <file>

delete a file
$ git rm <file>

restore a deleted file
$ git restore <file>

bypass staging and commit
$ git commit -a -m "message"

change a file name
$ git mv "old name.txt" "new name.txt"

see all commits
$ git log
$ git log --oneline
$ git log -p     (press q to quit)

change git commit name
$ git commit -m "new name" --amend

jump back to previous commits
$ git reset <code of git --online>


// BRANCHES //
- create new branch, if satisfied, merge it back to main.


$ git branch <name of branch>
$ git branch                                 - to see branches
$ git switch <name of branch>

to merge branch to main
$ git merge -m "message" <branch name?

to delete a branch
$ git branch -d <branch name>

to switch and create a new branch
$ git switch -c newBranch

//Upload to GitHub/

$ git remote add origin <link>
$ git branch -M main
$ git push -u origin main

check remote url
$ git remote -v

remove an existing remote
$ git remote remove origin

git push --all